[DEFAULT]
test_email = testuser@gmail.com
test_password = 7gAb!23$xz

[google]
# These are parameters for when we are live testing on google cloud

# The path to an actual bucket/object for performing a transfer:
files_to_transfer = gs://cccb-test-resources/demo1.fastq.gz,gs://cccb-test-resources/demo2.fastq.gz

# For the most accurate test, run 
# gsutil du <file location>
# on the path above.
# Otherwise, can put any integer here, but one might get an error (if dropbox space is limited)
file_sizes_in_bytes = 148967765,2100000000

[Dropbox]
# The following settings concern testing of Dropbox functionality
# All the endpoints should be the same, but we will use a test/dev callback
# so that we use a function that appropriately mocks out the actual file transfers, etc.
 
# The NAME of the URLs (relative to your domain) where Dropbox calls back to for testing OAuth2 flow.
# This is the name keyword in the urlconf (urls.py)
# The full URL (https://<domain>/<callback url> NEEDS to be registered with Dropbox
DROPBOX_OAUTH_CALLBACK = live_oauth_test_dropbox_callback

# The URL (relative to your domain) where Dropbox calls back to for testing the actual transfer.
# The full URL (https://<domain>/<callback url> NEEDS to be registered with Dropbox
DROPBOX_TRANSFER_CALLBACK = live_transfer_test_dropbox_callback



[Google Drive]

# The NAME of the URLs (relative to your domain) where Drive calls back to for testing OAuth2 flow.
# This is the name keyword in the urlconf (urls.py)
# The full URL (https://<domain>/<callback url> NEEDS to be registered with Google
DRIVE_CALLBACK = live_oauth_test_drive_callback

# The URL (relative to your domain) where Drive calls back to for testing the actual transfer.
# The full URL (https://<domain>/<callback url> NEEDS to be registered with Google
DRIVE_TRANSFER_CALLBACK = live_transfer_test_drive_callback

