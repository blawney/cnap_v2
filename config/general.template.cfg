[DEFAULT]

# set the compute environment here.  The string here should
# match a section below, since it determines which set of variables
# gets loaded.  Case-sensitive.
CLOUD_ENVIRONMENT = {{cloud_environment}}

# set a token for communicating between worker VMs and the head node
# must be a multiple of 8 in length
TOKEN = {{app_token}}

# an encrtyption key to be used with the token above
# must be a multiple of 8 in length
ENC_KEY = {{app_token_key}}



[Google Drive]
# The following settings concern Google Drive functionality
# For transfers TO Drive, we need the relevant application
# information, which we specify below.

# The URL where we initiate the OAuth2 flow:
DRIVE_AUTH_ENDPOINT = https://accounts.google.com/o/oauth2/auth

# The URL where we exchange the code for the token
DRIVE_TOKEN_ENDPOINT = https://accounts.google.com/o/oauth2/token

# The client ID, from your Dropbox application page
DRIVE_CLIENT_ID = {{drive_client_id}}

# The secret used when exchanging the code for the access token:
DRIVE_SECRET = {{drive_secret}}

# the public API key used on the client side for javascript
DRIVE_API_KEY = {{drive_api_key}}
 
# The URL (relative to your domain) where Dropbox calls back to for OAuth2 flow.
# The full URL (https://<domain>/<callback url> NEEDS to be registered with Dropbox
DRIVE_CALLBACK = /drive/callback/

# the scope needed for drive.  To put files into a user's Drive, need write access.  
DRIVE_SCOPE = https://www.googleapis.com/auth/drive



[Dropbox]
# The following settings concern Dropbox functionality
# For pulling files FROM Dropbox (termed "uploads" here, since we are 
# uploading to our systems, the browser handles the auth and sends a link, which is
# accessible by anyone with the URL.  For transfers TO dropbox, we need the relevant application
# information, which we specify below.

# The URL where we initiate the OAuth2 flow:
DROPBOX_AUTH_ENDPOINT = https://www.dropbox.com/oauth2/authorize

# The URL where we exchange the code for the token
DROPBOX_TOKEN_ENDPOINT = https://api.dropboxapi.com/oauth2/token

# The client ID, from your Dropbox application page
DROPBOX_CLIENT_ID = {{dropbox_client_id}}

# The secret used when exchanging the code for the access token:
DROPBOX_SECRET = {{dropbox_secret}}
 
# The URL (relative to your domain) where Dropbox calls back to for OAuth2 flow.
# The full URL (https://<domain>/<callback url> NEEDS to be registered with Dropbox
DROPBOX_CALLBACK = /dropbox/callback/

 


[google]
# general GCP configuration variables go here

# This is the Google Cloud Project ID
google_project_id = {{google_project_id}}

# This is the Google Cloud Project number
google_project_number = {{google_project_number}}

# the region ID
google_zone = {{google_zone}}

# Resources will be stored in a storage bucket based on the user
# This variable defines a prefix for these.  As an example, if the prefix was 'gs://foo-app-storage'
# then files for the user defined by primary key 5 would be in gs://foo-app-storage/5/
# Be sure to include the 'gs://' prefix
storage_bucket_prefix = gs://{{storage_bucket_prefix}}


[aws]
# general AWS configuration variables go here
